/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projet_java;

import controller.controlPayment;
import controller.controlPersonne;
import java.awt.Color;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ROG
 */
public class payment extends javax.swing.JInternalFrame {

    /**
     * Creates new form payment
     */
    public payment() {
        initComponents();
        BasicInternalFrameUI ui= (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        chargerListe();
        identifiant.setVisible(false);
        mounth_values.setBackground(Color.WHITE);
        mounth_values.setBorder(BorderFactory.createEmptyBorder());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        search_btn = new javax.swing.JLabel();
        search_value = new javax.swing.JTextField();
        list_container = new javax.swing.JScrollPane();
        list_result = new javax.swing.JTable();
        payOne = new javax.swing.JButton();
        changePay = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        identifiant = new javax.swing.JTextField();
        mounth_values = new javax.swing.JComboBox<>();

        setBorder(null);

        jPanel1.setBackground(new java.awt.Color(240, 242, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        search_btn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        search_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        search_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_btnMouseClicked(evt);
            }
        });

        search_value.setForeground(new java.awt.Color(153, 153, 153));
        search_value.setText("Nom ou prenom du personnel...");
        search_value.setBorder(null);
        search_value.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_valueKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(search_value, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(search_value, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        list_container.setBorder(null);

        list_result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        list_result.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_resultMouseClicked(evt);
            }
        });
        list_container.setViewportView(list_result);
        if (list_result.getColumnModel().getColumnCount() > 0) {
            list_result.getColumnModel().getColumn(0).setResizable(false);
            list_result.getColumnModel().getColumn(1).setResizable(false);
            list_result.getColumnModel().getColumn(2).setResizable(false);
            list_result.getColumnModel().getColumn(3).setResizable(false);
        }

        payOne.setBackground(new java.awt.Color(0, 102, 204));
        payOne.setForeground(new java.awt.Color(255, 255, 255));
        payOne.setText("Payer");
        payOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payOneActionPerformed(evt);
            }
        });

        changePay.setBackground(new java.awt.Color(0, 0, 153));
        changePay.setForeground(new java.awt.Color(255, 255, 255));
        changePay.setText("Payer tous (cette mois)");
        changePay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePayActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 0, 51));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Fiche de paye");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        mounth_values.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "tous", "janvier", "fevirer", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre" }));
        mounth_values.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(list_container)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mounth_values, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(payOne, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changePay)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 314, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mounth_values, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(list_container, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(payOne, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changePay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void search_valueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_valueKeyTyped
        String txtContent = search_value.getText();
        if ("Nom ou prenom du personnel...".equals(txtContent)){
            search_value.setText("");
            search_value.setForeground(Color.BLACK);
        }
        if ("".equals(txtContent)){
            search_value.setText("Nom ou prenom du personnel...");
            search_value.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_search_valueKeyTyped

    private void search_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_btnMouseClicked
        String txtContent = search_value.getText();
        String monthValue = (String) mounth_values.getSelectedItem();
        
        if ("Nom ou prenom du personnel...".equals(txtContent) || txtContent.equals("") || txtContent==null){
            System.out.println("Recherche vide");
            chargerListe();
        }
        else if(monthValue.equals("tous") && (!txtContent.equals("") || txtContent!=null || !"Nom ou prenom du personnel...".equals(txtContent)) ) {
            searchByName(txtContent);
            System.out.println("Recherche par nom");
        }
        else if(!monthValue.equals("tous") ) {
            searchByMonth(monthValue);
            System.out.println("Recherche par mois");
        }
        else {
            searchAll(txtContent, monthValue);
            System.out.println("Recherche par les deux");
        }
        
    }//GEN-LAST:event_search_btnMouseClicked

    private void list_resultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_resultMouseClicked
        
        int ligne = list_result.getSelectedRow();
        String clientId = String.valueOf(list_result.getValueAt(ligne, 0));
        identifiant.setText(clientId);
        
    }//GEN-LAST:event_list_resultMouseClicked

    private void payOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payOneActionPerformed
        String id = identifiant.getText();
        try {
            controlPayment cpm = new controlPayment();
            cpm.modifyPay(id);
            chargerListe();
            JOptionPane.showMessageDialog(this, "Payment effectuer!");
        } catch (Exception ex) {
            checkNotify chk = new checkNotify();
            chk.setVisible(true);
        }
        
    }//GEN-LAST:event_payOneActionPerformed

    private void changePayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePayActionPerformed
        String moisValue = (String) mounth_values.getSelectedItem();
        if (!moisValue.equals("tous")){
            try {
                controlPayment cpm = new controlPayment();
                cpm.payAllMonth(moisValue);
                chargerListe();
                checkNotify chk = new checkNotify();
                chk.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(payment.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_changePayActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        foche_payement fc = new foche_payement();
        fc.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        fc.setVisible(true);

        
        int ligne = list_result.getSelectedRow();
        String clientId = String.valueOf(list_result.getValueAt(ligne, 0));
        String nom = String.valueOf(list_result.getValueAt(ligne, 1));
        String prenom = String.valueOf(list_result.getValueAt(ligne, 2));
        String idPersonne;
        try {
            controlPayment cpm = new controlPayment();
            String result[] = cpm.resultPayment(clientId);
            idPersonne = result[3];
            for(int i=0; i<3;i++){
                System.out.print(result[i]);
            }
            controlPersonne cp = new controlPersonne();
            String resultSalary[] = cp.salairepersonne(idPersonne);
            int salairePrise = Integer.parseInt(resultSalary[0]) + Integer.parseInt(resultSalary[1])*Integer.parseInt(result[2]);
            
            fc.setValues(nom, prenom, result[0], resultSalary[0], result[2], clientId, ""+salairePrise+"");
            
        } catch (Exception ex) {
            Logger.getLogger(payment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void chargerListe() {
        String titre[] = {"id", "Nom", "Prénoms", "Salaire","Mois", "Status Payement"};
        Object enreg[][] = new Object[1][1];

        try {
            controlPayment cpm = new controlPayment();
            
            int nbr = cpm.countPay();
            enreg = new Object[nbr][titre.length];
            ResultSet rs1 = cpm.getAllPay();
            int i = 0;
            while (rs1.next()) {
                enreg[i][0] = (Object) rs1.getString("id");
                enreg[i][1] = (Object) rs1.getString("nom");
                enreg[i][2] = (Object) rs1.getString("prenom");
                enreg[i][3] = (Object) rs1.getString("salaire");
                enreg[i][4] = (Object) rs1.getString("mois");
                String status = (rs1.getString("status").equals("1")) ? "Payer" : "Non payer";
                enreg[i][5] = (Object) status;
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        list_result.setModel(new DefaultTableModel(enreg, titre));
        list_container.setViewportView(list_result);
    }
    
    public void searchByMonth(String month) {
        String titre[] = {"id", "Nom", "Prénoms", "Salaire", "Status Payement"};
        Object enreg[][] = new Object[1][1];

        try {
            controlPayment cpm = new controlPayment();
            
            int nbr = cpm.countPay();
            enreg = new Object[nbr][titre.length];
            ResultSet rs1 = cpm.filterByMounth(month);
            int i = 0;
            while (rs1.next()) {
                enreg[i][0] = (Object) rs1.getString("id");
                enreg[i][1] = (Object) rs1.getString("nom");
                enreg[i][2] = (Object) rs1.getString("prenom");
                enreg[i][3] = (Object) rs1.getString("salaire");
                String status = (rs1.getString("status").equals("1")) ? "Payer" : "Non payer";
                enreg[i][4] = (Object) status;
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        list_result.setModel(new DefaultTableModel(enreg, titre));
        list_container.setViewportView(list_result);
    }
    public void searchByName(String name) {
        String titre[] = {"id", "Nom", "Prénoms", "Salaire", "Status Payement"};
        Object enreg[][] = new Object[1][1];

        try {
            controlPayment cpm = new controlPayment();
            
            int nbr = cpm.countPay();
            enreg = new Object[nbr][titre.length];
            ResultSet rs1 = cpm.filterNoMonth(name);
            int i = 0;
            while (rs1.next()) {
                enreg[i][0] = (Object) rs1.getString("id");
                enreg[i][1] = (Object) rs1.getString("nom");
                enreg[i][2] = (Object) rs1.getString("prenom");
                enreg[i][3] = (Object) rs1.getString("salaire");
                String status = (rs1.getString("status").equals("1")) ? "Payer" : "Non payer";
                enreg[i][4] = (Object) status;
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        list_result.setModel(new DefaultTableModel(enreg, titre));
        list_container.setViewportView(list_result);
    }
    
     public void searchAll(String name, String month) {
        String titre[] = {"id", "Nom", "Prénoms", "Salaire", "Status Payement"};
        Object enreg[][] = new Object[1][1];

        try {
            controlPayment cpm = new controlPayment();
            
            int nbr = cpm.countPay();
            enreg = new Object[nbr][titre.length];
            ResultSet rs1 = cpm.filterWithMonth(name, month);
            int i = 0;
            while (rs1.next()) {
                enreg[i][0] = (Object) rs1.getString("id");
                enreg[i][1] = (Object) rs1.getString("nom");
                enreg[i][2] = (Object) rs1.getString("prenom");
                enreg[i][3] = (Object) rs1.getString("salaire");
                String status = (rs1.getString("status").equals("1")) ? "Payer" : "Non payer";
                enreg[i][4] = (Object) status;
                i++;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        list_result.setModel(new DefaultTableModel(enreg, titre));
        list_container.setViewportView(list_result);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changePay;
    private javax.swing.JTextField identifiant;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane list_container;
    private javax.swing.JTable list_result;
    private javax.swing.JComboBox<String> mounth_values;
    private javax.swing.JButton payOne;
    private javax.swing.JLabel search_btn;
    private javax.swing.JTextField search_value;
    // End of variables declaration//GEN-END:variables
}
